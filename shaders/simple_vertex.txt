#version 420 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aUvs;
layout (location = 4) in ivec4 boneIDs;
layout (location = 5) in vec4 boneWeights;
layout (location = 6) in vec3 aTangent;
layout (location = 8) in vec3 aColor;


layout (std140, binding=0) uniform Matrices
{
	mat4 view;		//16*4 bytes
	mat4 projection;	//16*4 bytes
	vec3 eyePosition;	//16
						//Total: 16*8+16 = 16*9
};

uniform mat4 model;


void main()
{
	gl_Position = projection * view * vec4(aPos, 1.0);
}